/*
Deployment script for Hisab3

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Hisab3"
:setvar DefaultFilePrefix "Hisab3"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.CHINTS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.CHINTS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping unnamed constraint on [dbo].[ApplicationUser]...';


GO
ALTER TABLE [dbo].[ApplicationUser] DROP CONSTRAINT [DF__Applicati__NickN__47DBAE45];


GO
PRINT N'Dropping [dbo].[FK_Event_User]...';


GO
ALTER TABLE [dbo].[Event] DROP CONSTRAINT [FK_Event_User];


GO
PRINT N'Starting rebuilding table [dbo].[Event]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Event] (
    [Id]              INT          IDENTITY (1, 1) NOT NULL,
    [UserId]          INT          NOT NULL,
    [Name]            VARCHAR (50) NOT NULL,
    [CreateDate]      DATETIME     NULL,
    [LastModfiedDate] DATETIME     NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Event1] PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Event])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Event] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Event] ([Id], [UserId], [Name], [CreateDate], [LastModfiedDate])
        SELECT   [Id],
                 [UserId],
                 [Name],
                 [CreateDate],
                 [LastModfiedDate]
        FROM     [dbo].[Event]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Event] OFF;
    END

DROP TABLE [dbo].[Event];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Event]', N'Event';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Event1]', N'PK_Event', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating unnamed constraint on [dbo].[ApplicationUser]...';


GO
ALTER TABLE [dbo].[ApplicationUser]
    ADD DEFAULT user FOR [NickName];


GO
PRINT N'Creating [dbo].[FK_Event_User]...';


GO
ALTER TABLE [dbo].[Event] WITH NOCHECK
    ADD CONSTRAINT [FK_Event_User] FOREIGN KEY ([UserId]) REFERENCES [dbo].[ApplicationUser] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

if((select count(*) from AccountType ) = 0)
Begin

INSERT INTO [dbo].[AccountType] ([Id] ,[Name]) VALUES (1,'Asset')
INSERT INTO [dbo].[AccountType] ([Id] ,[Name]) VALUES (2,'Liability')
End

if((select count(*) from ApplicationRole ) = 0)
BEGIN

INSERT INTO [dbo].[ApplicationRole] ([Id] ,[Name] ,[NormalizedName]) VALUES
           (1 ,'Admin' ,'ADMIN')

INSERT INTO [dbo].[ApplicationRole] ([Id] ,[Name] ,[NormalizedName]) VALUES
           (2 ,'App User' ,'APPLICATION USER')



END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Event] WITH CHECK CHECK CONSTRAINT [FK_Event_User];


GO
PRINT N'Update complete.';


GO
